name: Continuous Deployment

on:
  push:
    branches: [ master ]

jobs:
  powershell-tests:
    name: PowerShell Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Pester tests (pwsh)
        run: |
          Write-host $PSVersionTable.PSVersion.Major $PSVersionTable.PSRemotingProtocolVersion.Minor
          Set-PSRepository psgallery -InstallationPolicy trusted
          Install-Module -Name Pester -RequiredVersion 5.0.4 -confirm:$false -Force
          Invoke-Pester -Path "." -Output Detailed -CI
        shell: pwsh

  rust-check:
    name: Rust Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./wf-tools
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Verify pwd
        run: echo $PWD

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: check

  rust-test:
    name: Rust Test Suite
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./wf-tools
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Verify pwd
        run: echo $PWD

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test

  rust-lints:
    name: Rust Lints
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./wf-tools
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Verify pwd
        run: echo $PWD

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

  finish:
    name: Finish
    needs: [powershell-tests, rust-check, rust-test, rust-lints]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-ruby@v1
      - name: Notify DPT on Discord
        if: always()
        env:
          JOB_STATUS: ${{ job.status }}
          WEBHOOK_URL: ${{ secrets.DISCORD_DPT_WF_WEBHOOK_URL }}
          HOOK_OS_NAME: ${{ runner.os }}
          WORKFLOW_NAME: ${{ github.workflow }}
        run: |
          git clone https://github.com/DiscordHooks/github-actions-discord-webhook.git webhook
          bash webhook/send.sh $JOB_STATUS $WEBHOOK_URL
        shell: bash
